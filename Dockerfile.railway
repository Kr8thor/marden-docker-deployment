# Multi-stage build for Railway deployment
# This Dockerfile builds both frontend and backend

# Frontend build stage
FROM node:18-alpine as frontend-build
WORKDIR /app/frontend
COPY frontend/package.json ./
RUN npm install
COPY frontend/ ./
ENV NODE_ENV=production
ENV VITE_API_URL=/api
RUN npm run build

# Backend build stage
FROM node:18-alpine as backend-build
WORKDIR /app/backend
COPY backend/package.json ./
RUN npm install
COPY backend/ ./
ENV NODE_ENV=production2

# Final stage for Railway deployment
FROM nginx:alpine
# Copy frontend build
COPY --from=frontend-build /app/frontend/dist /usr/share/nginx/html
# Copy nginx config
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Copy backend files
COPY --from=backend-build /app/backend /app/backend
WORKDIR /app/backend

# Install backend dependencies
RUN apk add --no-cache nodejs npm

# Expose ports
EXPOSE 80 3000

# Start both services
COPY ./start.sh /
RUN chmod +x /start.sh
CMD ["/start.sh"]
