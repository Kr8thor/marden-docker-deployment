# Root Dockerfile.railway for deployment to Railway
ARG SERVICE=frontend

# Frontend build
FROM node:18-alpine as frontend-build
WORKDIR /app
# Copy the frontend directory
COPY ./frontend/package.json ./
# Use npm install instead of npm ci to update the lock file
RUN npm install
COPY ./frontend/ ./
ENV NODE_ENV=production
ENV VITE_API_URL=/api
RUN npm run build

# Backend build
FROM node:18-alpine as backend-build
WORKDIR /app
COPY ./backend/package*.json ./
# Use npm install instead of npm ci to update the lock file
RUN npm install
COPY ./backend/src/ ./src/
COPY ./backend/api/ ./api/
ENV NODE_ENV=production

# Frontend production
FROM nginx:alpine as frontend
COPY --from=frontend-build /app/dist /usr/share/nginx/html
# Copy the nginx configuration file
COPY ./frontend/nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]

# Backend production
FROM node:18-alpine as backend
WORKDIR /app
COPY --from=backend-build /app .
ENV PORT=3000
EXPOSE 3000
CMD ["npm", "start"]

# Choose the final stage based on SERVICE arg
FROM ${SERVICE}
